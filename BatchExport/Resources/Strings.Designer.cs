//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlterTools.BatchExport.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AlterTools.BatchExport.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse.
        /// </summary>
        public static string Base_Button_Browse {
            get {
                return ResourceManager.GetString("Base.Button.Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        public static string Base_Button_Delete_Content {
            get {
                return ResourceManager.GetString("Base.Button.Delete.Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete selected files from list.
        /// </summary>
        public static string Base_Button_Delete_ToolTip {
            get {
                return ResourceManager.GetString("Base.Button.Delete.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Erase list.
        /// </summary>
        public static string Base_Button_EraseList {
            get {
                return ResourceManager.GetString("Base.Button.EraseList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        public static string Base_Button_Help_Content {
            get {
                return ResourceManager.GetString("Base.Button.Help.Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugin usage help.
        /// </summary>
        public static string Base_Button_Help_ToolTip {
            get {
                return ResourceManager.GetString("Base.Button.Help.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load.
        /// </summary>
        public static string Base_Button_Load_Content {
            get {
                return ResourceManager.GetString("Base.Button.Load.Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load (.rvt) files.
        /// </summary>
        public static string Base_Button_Load_ToolTip {
            get {
                return ResourceManager.GetString("Base.Button.Load.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load list.
        /// </summary>
        public static string Base_Button_LoadList_Content {
            get {
                return ResourceManager.GetString("Base.Button.LoadList.Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load previously saved configuration file in (.json) format.
        /// </summary>
        public static string Base_Button_LoadList_ToolTip {
            get {
                return ResourceManager.GetString("Base.Button.LoadList.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load previously saved file list in (.txt) format.
        /// </summary>
        public static string Base_Button_LoadListTxt_ToolTip {
            get {
                return ResourceManager.GetString("Base.Button.LoadListTxt.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save list.
        /// </summary>
        public static string Base_Button_SaveList_Content {
            get {
                return ResourceManager.GetString("Base.Button.SaveList.Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save configuration file in (.json) format.
        /// </summary>
        public static string Base_Button_SaveList_ToolTip {
            get {
                return ResourceManager.GetString("Base.Button.SaveList.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save list in (.txt) format.
        /// </summary>
        public static string Base_Button_SaveListTxt_ToolTip {
            get {
                return ResourceManager.GetString("Base.Button.SaveListTxt.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start.
        /// </summary>
        public static string Base_Button_Start_Content {
            get {
                return ResourceManager.GetString("Base.Button.Start.Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start batch export of current configuration.
        /// </summary>
        public static string Base_Button_Start_ToolTip {
            get {
                return ResourceManager.GetString("Base.Button.Start.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export view.
        /// </summary>
        public static string Base_ExportScopeView {
            get {
                return ResourceManager.GetString("Base.ExportScopeView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export entire model.
        /// </summary>
        public static string Base_ExportScopeWhole {
            get {
                return ResourceManager.GetString("Base.ExportScopeWhole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RVT files to be exported.
        /// </summary>
        public static string Base_Header {
            get {
                return ResourceManager.GetString("Base.Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore missing view
        ///and export whole project.
        /// </summary>
        public static string Base_IgnoreMissingView {
            get {
                return ResourceManager.GetString("Base.IgnoreMissingView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files list in (.rvt) format.
        /// </summary>
        public static string Base_ListBox_ToolTip {
            get {
                return ResourceManager.GetString("Base.ListBox.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Postfix.
        /// </summary>
        public static string Base_Postfix {
            get {
                return ResourceManager.GetString("Base.Postfix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Postfix to be added to the end of a file name.
        /// </summary>
        public static string Base_Postfix_ToolTip {
            get {
                return ResourceManager.GetString("Base.Postfix.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prefix.
        /// </summary>
        public static string Base_Prefix {
            get {
                return ResourceManager.GetString("Base.Prefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prefix to be added to the start of a file name.
        /// </summary>
        public static string Base_Prefix_ToolTip {
            get {
                return ResourceManager.GetString("Base.Prefix.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save to folder.
        /// </summary>
        public static string Base_ResultingFolder {
            get {
                return ResourceManager.GetString("Base.ResultingFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t create log file.
        /// </summary>
        public static string Base_TurnOffLog {
            get {
                return ResourceManager.GetString("Base.TurnOffLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prefixes of Worksets to be closed.
        /// </summary>
        public static string Base_WorksetPrefixes {
            get {
                return ResourceManager.GetString("Base.WorksetPrefixes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the Prefixes of all Worksets that need to be closed when opening the file, separated by semicolons (;). 
        ///Worksets with Links are usually closed to speed up the opening of models..
        /// </summary>
        public static string Base_WorksetPrefixes_ToolTip {
            get {
                return ResourceManager.GetString("Base.WorksetPrefixes.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No such folder exists. 
        ///Should I create one?.
        /// </summary>
        public static string Const_CreateFolder {
            get {
                return ResourceManager.GetString("Const.CreateFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        public static string Const_Default {
            get {
                return ResourceManager.GetString("Const.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level;Assembly Code;Count.
        /// </summary>
        public static string Const_DefaultParams {
            get {
                return ResourceManager.GetString("Const.DefaultParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _detached.
        /// </summary>
        public static string Const_Detached {
            get {
                return ResourceManager.GetString("Const.Detached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A difference in coordinate systems has been detected. 
        ///Do you want to retrieve coordinates from the file?.
        /// </summary>
        public static string Const_DiffCoord {
            get {
                return ResourceManager.GetString("Const.DiffCoord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Done!.
        /// </summary>
        public static string Const_Done {
            get {
                return ResourceManager.GetString("Const.Done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import detected no valid elements in the file&apos;s Model space.
        /// </summary>
        public static string Const_DwgImportDialog {
            get {
                return ResourceManager.GetString("Const.DwgImportDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Const_Error {
            get {
                return ResourceManager.GetString("Const.Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to errors..
        /// </summary>
        public static string Const_Errors {
            get {
                return ResourceManager.GetString("Const.Errors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (CSV) split by semicolon (.csv)|*.csv.
        /// </summary>
        public static string Const_FilterCsv {
            get {
                return ResourceManager.GetString("Const.FilterCsv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JSON file (.json)|*.json.
        /// </summary>
        public static string Const_FilterJson {
            get {
                return ResourceManager.GetString("Const.FilterJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revit Files (.rvt)|*.rvt.
        /// </summary>
        public static string Const_FilterRvt {
            get {
                return ResourceManager.GetString("Const.FilterRvt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text file (.txt)|*.txt.
        /// </summary>
        public static string Const_FilterTxt {
            get {
                return ResourceManager.GetString("Const.FilterTxt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Good evening.
        /// </summary>
        public static string Const_GoodEvening {
            get {
                return ResourceManager.GetString("Const.GoodEvening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Link.
        /// </summary>
        public static string Const_Link {
            get {
                return ResourceManager.GetString("Const.Link", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the valid path to the output file!.
        /// </summary>
        public static string Const_NoCsv {
            get {
                return ResourceManager.GetString("Const.NoCsv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add at least one file for export!.
        /// </summary>
        public static string Const_NoFiles {
            get {
                return ResourceManager.GetString("Const.NoFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the folder for export!.
        /// </summary>
        public static string Const_NoFolder {
            get {
                return ResourceManager.GetString("Const.NoFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a mask for renaming files!.
        /// </summary>
        public static string Const_NoMaskFile {
            get {
                return ResourceManager.GetString("Const.NoMaskFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the path replacement mask!.
        /// </summary>
        public static string Const_NoMaskPath {
            get {
                return ResourceManager.GetString("Const.NoMaskPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify at least one parameter for export!.
        /// </summary>
        public static string Const_NoParameters {
            get {
                return ResourceManager.GetString("Const.NoParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the Path mode!.
        /// </summary>
        public static string Const_NoPathMode {
            get {
                return ResourceManager.GetString("Const.NoPathMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The document doesn&apos;t have any transmission data.
        /// </summary>
        public static string Const_NoTransDataAlert {
            get {
                return ResourceManager.GetString("Const.NoTransDataAlert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter View name.
        /// </summary>
        public static string Const_NoViewName {
            get {
                return ResourceManager.GetString("Const.NoViewName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Worksets.
        /// </summary>
        public static string Const_OpenWorksets {
            get {
                return ResourceManager.GetString("Const.OpenWorksets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purge unused.
        /// </summary>
        public static string Const_Purge {
            get {
                return ResourceManager.GetString("Const.Purge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove empty Worksets.
        /// </summary>
        public static string Const_RemoveEmptyWorksets {
            get {
                return ResourceManager.GetString("Const.RemoveEmptyWorksets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove all Links.
        /// </summary>
        public static string Const_RemoveLinks {
            get {
                return ResourceManager.GetString("Const.RemoveLinks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task completed..
        /// </summary>
        public static string Const_TaskCompleted {
            get {
                return ResourceManager.GetString("Const.TaskCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There where.
        /// </summary>
        public static string Const_ThereWhere {
            get {
                return ResourceManager.GetString("Const.ThereWhere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Well, the call is yours..
        /// </summary>
        public static string Const_ToHell {
            get {
                return ResourceManager.GetString("Const.ToHell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total time:.
        /// </summary>
        public static string Const_TotalTime {
            get {
                return ResourceManager.GetString("Const.TotalTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t find correct info in the text file.
        /// </summary>
        public static string Const_VMBase_NoFiles {
            get {
                return ResourceManager.GetString("Const.VMBase.NoFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify valid folder for export!.
        /// </summary>
        public static string Const_WrongFolder {
            get {
                return ResourceManager.GetString("Const.WrongFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistency between the input mask and file names!.
        /// </summary>
        public static string Const_WrongMask {
            get {
                return ResourceManager.GetString("Const.WrongMask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong file scheme.
        /// </summary>
        public static string Const_WrongScheme {
            get {
                return ResourceManager.GetString("Const.WrongScheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detach 
        ///models.
        /// </summary>
        public static string Core_Button_Detach_Text {
            get {
                return ResourceManager.GetString("Core.Button.Detach.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch detach and export models.
        /// </summary>
        public static string Core_Button_Detach_ToolTip {
            get {
                return ResourceManager.GetString("Core.Button.Detach.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IFC 
        ///Export.
        /// </summary>
        public static string Core_Button_IFC_Text {
            get {
                return ResourceManager.GetString("Core.Button.IFC.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch export models to IFC.
        /// </summary>
        public static string Core_Button_IFC_ToolTip {
            get {
                return ResourceManager.GetString("Core.Button.IFC.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Link 
        ///RVT models.
        /// </summary>
        public static string Core_Button_Link_Text {
            get {
                return ResourceManager.GetString("Core.Button.Link.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Link batch of RVT models to current project in one click.
        /// </summary>
        public static string Core_Button_Link_ToolTip {
            get {
                return ResourceManager.GetString("Core.Button.Link.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Migrate 
        ///models.
        /// </summary>
        public static string Core_Button_Migrate_Text {
            get {
                return ResourceManager.GetString("Core.Button.Migrate.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch migrate models and update nested links.
        /// </summary>
        public static string Core_Button_Migrate_ToolTip {
            get {
                return ResourceManager.GetString("Core.Button.Migrate.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NWC 
        ///Export.
        /// </summary>
        public static string Core_Button_NWC_Text {
            get {
                return ResourceManager.GetString("Core.Button.NWC.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch export models to NWC.
        /// </summary>
        public static string Core_Button_NWC_ToolTip {
            get {
                return ResourceManager.GetString("Core.Button.NWC.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters 
        ///Export.
        /// </summary>
        public static string Core_Button_Params_Text {
            get {
                return ResourceManager.GetString("Core.Button.Params.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch export parameters from models into single CSV.
        /// </summary>
        public static string Core_Button_Params_ToolTip {
            get {
                return ResourceManager.GetString("Core.Button.Params.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transmit 
        ///models.
        /// </summary>
        public static string Core_Button_Transmit_Text {
            get {
                return ResourceManager.GetString("Core.Button.Transmit.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch transmit models.
        /// </summary>
        public static string Core_Button_Transmit_ToolTip {
            get {
                return ResourceManager.GetString("Core.Button.Transmit.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Worksets 
        ///Export.
        /// </summary>
        public static string Core_Button_Worksets_Text {
            get {
                return ResourceManager.GetString("Core.Button.Worksets.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch export workset name from several models.
        /// </summary>
        public static string Core_Button_Worksets_ToolTip {
            get {
                return ResourceManager.GetString("Core.Button.Worksets.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch export.
        /// </summary>
        public static string Core_Panel_Export {
            get {
                return ResourceManager.GetString("Core.Panel.Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch import.
        /// </summary>
        public static string Core_Panel_Import {
            get {
                return ResourceManager.GetString("Core.Panel.Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change.
        /// </summary>
        public static string Detach_Change {
            get {
                return ResourceManager.GetString("Detach.Change", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check models for “empty” view.
        /// </summary>
        public static string Detach_CheckBox_EmptyView_Content {
            get {
                return ResourceManager.GetString("Detach.CheckBox.EmptyView.Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Should the “View_name” view be checked for the presence of objects, and if the view is empty, the file will be saved with the prefix “EMPTY_”.
        /// </summary>
        public static string Detach_CheckBox_EmptyView_ToolTip {
            get {
                return ResourceManager.GetString("Detach.CheckBox.EmptyView.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purge models.
        /// </summary>
        public static string Detach_CheckBox_Purge_Content {
            get {
                return ResourceManager.GetString("Detach.CheckBox.Purge.Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implements the functionality of the &quot;Purge unused&quot; command until complete cleanup (several times).
        /// </summary>
        public static string Detach_CheckBox_Purge_ToolTip {
            get {
                return ResourceManager.GetString("Detach.CheckBox.Purge.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mask.
        /// </summary>
        public static string Detach_Mask {
            get {
                return ResourceManager.GetString("Detach.Mask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 05_WIP.
        /// </summary>
        public static string Detach_MaskIn {
            get {
                return ResourceManager.GetString("Detach.MaskIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 06_Common.
        /// </summary>
        public static string Detach_MaskOut {
            get {
                return ResourceManager.GetString("Detach.MaskOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename files.
        /// </summary>
        public static string Detach_Rename {
            get {
                return ResourceManager.GetString("Detach.Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch export of detached models.
        /// </summary>
        public static string Detach_Title {
            get {
                return ResourceManager.GetString("Detach.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To.
        /// </summary>
        public static string Detach_To {
            get {
                return ResourceManager.GetString("Detach.To", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of the view to check.
        /// </summary>
        public static string Detach_ViewName {
            get {
                return ResourceManager.GetString("Detach.ViewName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	Save the configuration by clicking the “Save config” button in (.JSON) format.
        ///	This configuration can then be used for re-exporting by clicking the “Load config” button..
        /// </summary>
        public static string Help_Config {
            get {
                return ResourceManager.GetString("Help.Config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	Select the export mode:
        ///1. All files will be placed in one folder.
        ///2. Files will be placed in the appropriate folders, i.e., the path will be updated according to the mask..
        /// </summary>
        public static string Help_DetachMid {
            get {
                return ResourceManager.GetString("Help.DetachMid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	The plugin is designed for batch export of detached models..
        /// </summary>
        public static string Help_DetachTitle {
            get {
                return ResourceManager.GetString("Help.DetachTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	Next, specify the folder for saving. You can enter the path manually or select a folder using the “Browse” button..
        /// </summary>
        public static string Help_Folder {
            get {
                return ResourceManager.GetString("Help.Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	The plugin is designed for batch export of files to IFC format..
        /// </summary>
        public static string Help_IFCTitle {
            get {
                return ResourceManager.GetString("Help.IFCTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	The plugin is designed for batch adding models as Revit links..
        /// </summary>
        public static string Help_LinkTitle {
            get {
                return ResourceManager.GetString("Help.LinkTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	Save the list by clicking the “Save list” button in (.txt) format.
        ///	This list can then be used for re-exporting by clicking the “Load list” button..
        /// </summary>
        public static string Help_List {
            get {
                return ResourceManager.GetString("Help.List", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	If you are using the plugin for the first time and do not have any previously saved lists, you need to do the following: use the “Load” button to add all the object models that need to be exported. If you accidentally added extra files, select them and click the “Delete” button..
        /// </summary>
        public static string Help_Load {
            get {
                return ResourceManager.GetString("Help.Load", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	The plugin is designed to migrate a project to a new location while preserving the structure of links, both within folders and within the models themselves.
        ///	Open or paste a link to the Json config, which stores the structure of type Dictionary&lt;string, string&gt;,
        ///where the first string is the current path to the file, and the second is the new path.
        ///    Example:
        ///    { “C:\oldfile.rvt”: “C:\newfile.rvt”,}.
        /// </summary>
        public static string Help_Migrate {
            get {
                return ResourceManager.GetString("Help.Migrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	Set the prefix and postfix that you want to add to the file names. If you don&apos;t need to do this, just leave the fields blank.
        ///	Select the export properties you need. The default settings are the ones that are used most often..
        /// </summary>
        public static string Help_Naming {
            get {
                return ResourceManager.GetString("Help.Naming", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///	**********************************************
        ///
        ///	If you have several saved configurations, you can use the second-level batch export.
        ///	Use the “Load Configs” button to load a list (.txt) with paths to configurations in (.JSON) format. The list structure looks like this: 
        ///	path\\config.json
        ///	path\\config2.json
        ///	path\\config3.json
        ///
        ///	Use the “Begin” button to start the second-level batch export, which exports several objects with their corresponding settings..
        /// </summary>
        public static string Help_NWCEnd {
            get {
                return ResourceManager.GetString("Help.NWCEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	The plugin is designed for batch exporting files to NWC format..
        /// </summary>
        public static string Help_NWCTitle {
            get {
                return ResourceManager.GetString("Help.NWCTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	The plugin is designed for batch export of parameters from the model to a .csv file.
        ///	Specify the names of the parameters to be exported, separated by semicolon (;) in the corresponding field..
        /// </summary>
        public static string Help_ParamsTitle {
            get {
                return ResourceManager.GetString("Help.ParamsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	Start the export by clicking the “Start” button..
        /// </summary>
        public static string Help_Start {
            get {
                return ResourceManager.GetString("Help.Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	The plugin is designed for batch transfer of models and implements similar functionality to the “eTransmit” plugin..
        /// </summary>
        public static string Help_TransmitTitle {
            get {
                return ResourceManager.GetString("Help.TransmitTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export base quantities.
        /// </summary>
        public static string IFC_BaseQuantities {
            get {
                return ResourceManager.GetString("IFC.BaseQuantities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Split Walls, Columns,
        ///Ducts by Level.
        /// </summary>
        public static string IFC_CheckBox_Splitting {
            get {
                return ResourceManager.GetString("IFC.CheckBox.Splitting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export parameter mapping table.
        /// </summary>
        public static string IFC_MappingTable {
            get {
                return ResourceManager.GetString("IFC.MappingTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Space boundaries.
        /// </summary>
        public static string IFC_SpaceBoundaries {
            get {
                return ResourceManager.GetString("IFC.SpaceBoundaries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string IFC_SpaceBoundaryLevels0 {
            get {
                return ResourceManager.GetString("IFC.SpaceBoundaryLevels0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1st Level.
        /// </summary>
        public static string IFC_SpaceBoundaryLevels1 {
            get {
                return ResourceManager.GetString("IFC.SpaceBoundaryLevels1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2nd Level.
        /// </summary>
        public static string IFC_SpaceBoundaryLevels2 {
            get {
                return ResourceManager.GetString("IFC.SpaceBoundaryLevels2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IFC batch export.
        /// </summary>
        public static string IFC_Title {
            get {
                return ResourceManager.GetString("IFC.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IFC version.
        /// </summary>
        public static string IFC_Version {
            get {
                return ResourceManager.GetString("IFC.Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add to the current Workset.
        /// </summary>
        public static string Link_CurrentWorkset {
            get {
                return ResourceManager.GetString("Link.CurrentWorkset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of RVT files to link.
        /// </summary>
        public static string Link_Header {
            get {
                return ResourceManager.GetString("Link.Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin Links.
        /// </summary>
        public static string Link_Pin {
            get {
                return ResourceManager.GetString("Link.Pin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch link models.
        /// </summary>
        public static string Link_Title {
            get {
                return ResourceManager.GetString("Link.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load config.
        /// </summary>
        public static string Migrate_Button_LoadConfig {
            get {
                return ResourceManager.GetString("Migrate.Button.LoadConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These files weren&apos;t copied:.
        /// </summary>
        public static string Migrate_DidntCopy {
            get {
                return ResourceManager.GetString("Migrate.DidntCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provide path to the configuration!.
        /// </summary>
        public static string Migrate_NoConfig {
            get {
                return ResourceManager.GetString("Migrate.NoConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch migrate models.
        /// </summary>
        public static string Migrate_Title {
            get {
                return ResourceManager.GetString("Migrate.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add configs!.
        /// </summary>
        public static string NWC_AddConfigs {
            get {
                return ResourceManager.GetString("NWC.AddConfigs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        public static string NWC_All {
            get {
                return ResourceManager.GetString("NWC.All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Begin.
        /// </summary>
        public static string NWC_Button_Begin {
            get {
                return ResourceManager.GetString("NWC.Button.Begin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Begin export of multiple configurations.
        /// </summary>
        public static string NWC_Button_Begin_ToolTip {
            get {
                return ResourceManager.GetString("NWC.Button.Begin.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load configs.
        /// </summary>
        public static string NWC_Button_LoadConfigs {
            get {
                return ResourceManager.GetString("NWC.Button.LoadConfigs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load list with configuration files in (.txt) format.
        /// </summary>
        public static string NWC_Button_LoadConfigs_ToolTip {
            get {
                return ResourceManager.GetString("NWC.Button.LoadConfigs.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert element parameters.
        /// </summary>
        public static string NWC_ConvertElementParams {
            get {
                return ResourceManager.GetString("NWC.ConvertElementParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert element properties.
        /// </summary>
        public static string NWC_ConvertElementProperties {
            get {
                return ResourceManager.GetString("NWC.ConvertElementProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert lights.
        /// </summary>
        public static string NWC_ConvertLights {
            get {
                return ResourceManager.GetString("NWC.ConvertLights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Coordinates.
        /// </summary>
        public static string NWC_Coordinates {
            get {
                return ResourceManager.GetString("NWC.Coordinates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Divide File into Levels.
        /// </summary>
        public static string NWC_DivideFile {
            get {
                return ResourceManager.GetString("NWC.DivideFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Elements.
        /// </summary>
        public static string NWC_Elements {
            get {
                return ResourceManager.GetString("NWC.Elements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert linked 
        ///CAD formats.
        /// </summary>
        public static string NWC_ExportCAD {
            get {
                return ResourceManager.GetString("NWC.ExportCAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export element Ids.
        /// </summary>
        public static string NWC_ExportElementIds {
            get {
                return ResourceManager.GetString("NWC.ExportElementIds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert linked files.
        /// </summary>
        public static string NWC_ExportLinks {
            get {
                return ResourceManager.GetString("NWC.ExportLinks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert construction parts.
        /// </summary>
        public static string NWC_ExportParts {
            get {
                return ResourceManager.GetString("NWC.ExportParts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert room as attribute.
        /// </summary>
        public static string NWC_ExportRoomAsAttr {
            get {
                return ResourceManager.GetString("NWC.ExportRoomAsAttr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export room geometry.
        /// </summary>
        public static string NWC_ExportRoomGeometry {
            get {
                return ResourceManager.GetString("NWC.ExportRoomGeometry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert URLs.
        /// </summary>
        public static string NWC_ExportURLs {
            get {
                return ResourceManager.GetString("NWC.ExportURLs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Faceting Factor.
        /// </summary>
        public static string NWC_Faceting {
            get {
                return ResourceManager.GetString("NWC.Faceting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try and find 
        ///missing material.
        /// </summary>
        public static string NWC_FindMissingMaterials {
            get {
                return ResourceManager.GetString("NWC.FindMissingMaterials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project Internal.
        /// </summary>
        public static string NWC_Internal {
            get {
                return ResourceManager.GetString("NWC.Internal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LIst of JSON configs.
        /// </summary>
        public static string NWC_ListConfigs {
            get {
                return ResourceManager.GetString("NWC.ListConfigs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of configuration files.
        /// </summary>
        public static string NWC_ListConfigs_ToolTip {
            get {
                return ResourceManager.GetString("NWC.ListConfigs.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string NWC_None {
            get {
                return ResourceManager.GetString("NWC.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shared.
        /// </summary>
        public static string NWC_Shared {
            get {
                return ResourceManager.GetString("NWC.Shared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch export NWC.
        /// </summary>
        public static string NWC_Title {
            get {
                return ResourceManager.GetString("NWC.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters to export.
        /// </summary>
        public static string Params_ExportParams {
            get {
                return ResourceManager.GetString("Params.ExportParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the names of the parameters to be exported using a semicolon (;)..
        /// </summary>
        public static string Params_ExportParams_ToolTip {
            get {
                return ResourceManager.GetString("Params.ExportParams.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Family and Type.
        /// </summary>
        public static string Params_FamilyAndType {
            get {
                return ResourceManager.GetString("Params.FamilyAndType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LIst of RVT files to process.
        /// </summary>
        public static string Params_Header {
            get {
                return ResourceManager.GetString("Params.Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path to resulting file.
        /// </summary>
        public static string Params_ResultFile {
            get {
                return ResourceManager.GetString("Params.ResultFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Define path to the resulting file in (.csv) format.
        /// </summary>
        public static string Params_ResultFile_ToolTip {
            get {
                return ResourceManager.GetString("Params.ResultFile.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch export parameters.
        /// </summary>
        public static string Params_Title {
            get {
                return ResourceManager.GetString("Params.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Put everything 
        ///in single folder.
        /// </summary>
        public static string Transmit_SameFolder {
            get {
                return ResourceManager.GetString("Transmit.SameFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Put all models into single directory or preserve folder structure.
        /// </summary>
        public static string Transmit_SameFolder_ToolTip {
            get {
                return ResourceManager.GetString("Transmit.SameFolder.ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch export of transmitted models.
        /// </summary>
        public static string Transmit_Title {
            get {
                return ResourceManager.GetString("Transmit.Title", resourceCulture);
            }
        }
    }
}
