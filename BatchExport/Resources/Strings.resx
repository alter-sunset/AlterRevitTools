<?xml version="1.0" encoding="utf-8"?>

<root>
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:element name="root" msdata:IsDataSet="true">
            
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="DetachTitle" xml:space="preserve">
        <value>Batch export of detached models</value>
    </data>
    <data name="BaseHeader" xml:space="preserve">
        <value>RVT files to be exported</value>
    </data>
    <data name="HelpToolTip" xml:space="preserve">
        <value>Plugin usage help</value>
    </data>
    <data name="Help" xml:space="preserve">
        <value>Help</value>
    </data>
    <data name="ListBoxToolTip" xml:space="preserve">
        <value>Files list in (.rvt) format</value>
    </data>
    <data name="Load" xml:space="preserve">
        <value>Load</value>
    </data>
    <data name="LoadToolTip" xml:space="preserve">
        <value>Load (.rvt) files</value>
    </data>
    <data name="LoadList" xml:space="preserve">
        <value>Load list</value>
    </data>
    <data name="LoadListToolTip" xml:space="preserve">
        <value>Load previously saved configuration file in (.json) format</value>
    </data>
    <data name="SaveList" xml:space="preserve">
        <value>Save list</value>
    </data>
    <data name="SaveListToolTip" xml:space="preserve">
        <value>Save configuration file in (.json) format</value>
    </data>
    <data name="Delete" xml:space="preserve">
        <value>Delete</value>
    </data>
    <data name="DeleteToolTip" xml:space="preserve">
        <value>Delete selected files from list</value>
    </data>
    <data name="IFCTitle" xml:space="preserve">
        <value>IFC batch export</value>
    </data>
    <data name="SaveToFolder" xml:space="preserve">
        <value>Save to folder</value>
    </data>
    <data name="Browse" xml:space="preserve">
        <value>Browse</value>
    </data>
    <data name="LinkTitle" xml:space="preserve">
        <value>Batch link models</value>
    </data>
    <data name="LinkHeader" xml:space="preserve">
        <value>List of RVT files to link</value>
    </data>
    <data name="MigrateTitle" xml:space="preserve">
        <value>Batch migrate models</value>
    </data>
    <data name="LoadConfig" xml:space="preserve">
        <value>Load config</value>
    </data>
    <data name="Start" xml:space="preserve">
        <value>Start</value>
    </data>
    <data name="StartToolTip" xml:space="preserve">
        <value>Start batch export of current configuration</value>
    </data>
    <data name="WrongScheme" xml:space="preserve">
        <value>Wrong file scheme</value>
    </data>
    <data name="NoTransDataAlert" xml:space="preserve">
        <value>The document doesn't have any transmission data</value>
    </data>
    <data name="NoFilesVMBase" xml:space="preserve">
        <value>Couldn't find correct info in the text file</value>
    </data>
    <data name="Mask" xml:space="preserve">
        <value>Mask</value>
    </data>
    <data name="Change" xml:space="preserve">
        <value>Change</value>
    </data>
    <data name="To" xml:space="preserve">
        <value>To</value>
    </data>
    <data name="RenameFiles" xml:space="preserve">
        <value>Rename files</value>
    </data>
    <data name="PurgeModels" xml:space="preserve">
        <value>Purge models</value>
    </data>
    <data name="PurgeModelsToolTip" xml:space="preserve">
        <value>Implements the functionality of the "Purge unused" command until complete cleanup (several times)</value>
    </data>
    <data name="CheckForEmptyView" xml:space="preserve">
        <value>Check models for “empty” view</value>
    </data>
    <data name="CheckForEmptyViewToolTip" xml:space="preserve">
        <value>Should the “View_name” view be checked for the presence of objects, and if the view is empty, the file will be saved with the prefix “EMPTY_”</value>
    </data>
    <data name="ViewNameToCheck" xml:space="preserve">
        <value>Name of the view to check</value>
    </data>
    <data name="EraseList" xml:space="preserve">
        <value>Erase list</value>
    </data>
    <data name="MaskIn" xml:space="preserve">
        <value>05_WIP</value>
    </data>
    <data name="MaskOut" xml:space="preserve">
        <value>06_Common</value>
    </data>
    <data name="FirstLevel" xml:space="preserve">
        <value>1st Level</value>
    </data>
    <data name="SecondLevel" xml:space="preserve">
        <value>2nd Level</value>
    </data>
    <data name="Default" xml:space="preserve">
        <value>Default</value>
    </data>
    <data name="Prefix" xml:space="preserve">
        <value>Prefix</value>
    </data>
    <data name="PrefixToolTip" xml:space="preserve">
        <value>Prefix to be added to the start of a file name</value>
    </data>
    <data name="Postfix" xml:space="preserve">
        <value>Postfix</value>
    </data>
    <data name="PostfixToolTip" xml:space="preserve">
        <value>Postfix to be added to the end of a file name</value>
    </data>
    <data name="IFCMappingTable" xml:space="preserve">
        <value>Export parameter mapping table</value>
    </data>
    <data name="ExportBaseQuantities" xml:space="preserve">
        <value>Export base quantities</value>
    </data>
    <data name="IFCVersion" xml:space="preserve">
        <value>IFC version</value>
    </data>
    <data name="IFCCheckBoxSplitting" xml:space="preserve">
        <value>Split Walls, Columns,
Ducts by Level</value>
    </data>
    <data name="ExportEntireModel" xml:space="preserve">
        <value>Export entire model</value>
    </data>
    <data name="ExportView" xml:space="preserve">
        <value>Export view</value>
    </data>
    <data name="IgnoreMissingView" xml:space="preserve">
        <value>Ignore missing view
and export whole project</value>
    </data>
    <data name="SpaceBoundaries" xml:space="preserve">
        <value>Space boundaries</value>
    </data>
    <data name="WorksetPrefixes" xml:space="preserve">
        <value>Prefixes of Worksets to be closed</value>
    </data>
    <data name="WorksetPrefixesToolTip" xml:space="preserve">
        <value>Specify the Prefixes of all Worksets that need to be closed when opening the file, separated by semicolons (;). 
Worksets with Links are usually closed to speed up the opening of models.</value>
    </data>
    <data name="TurnOffLog" xml:space="preserve">
        <value>Don't create log file</value>
    </data>
    <data name="DiffCoordError" xml:space="preserve">
        <value>A difference in coordinate systems has been detected. 
Do you want to retrieve coordinates from the file?</value>
    </data>
    <data name="Link" xml:space="preserve">
        <value>Link</value>
    </data>
    <data name="Error" xml:space="preserve">
        <value>Error</value>
    </data>
    <data name="PinLinks" xml:space="preserve">
        <value>Pin Links</value>
    </data>
    <data name="LinkCurrentWorkset" xml:space="preserve">
        <value>Add to the current Workset</value>
    </data>
    <data name="Shared" xml:space="preserve">
        <value>Shared</value>
    </data>
    <data name="Internal" xml:space="preserve">
        <value>Project Internal</value>
    </data>
    <data name="None" xml:space="preserve">
        <value>None</value>
    </data>
    <data name="All" xml:space="preserve">
        <value>All</value>
    </data>
    <data name="Elements" xml:space="preserve">
        <value>Elements</value>
    </data>
    <data name="NWCTitle" xml:space="preserve">
        <value>Batch export NWC</value>
    </data>
    <data name="ConvertElementProperties" xml:space="preserve">
        <value>Convert element properties</value>
    </data>
    <data name="Coordinates" xml:space="preserve">
        <value>Coordinates</value>
    </data>
    <data name="DivideFile" xml:space="preserve">
        <value>Divide File into Levels</value>
    </data>
    <data name="ExportElementIds" xml:space="preserve">
        <value>Export element Ids</value>
    </data>
    <data name="ConvertLinks" xml:space="preserve">
        <value>Convert linked files</value>
    </data>
    <data name="ConvertParts" xml:space="preserve">
        <value>Convert construction parts</value>
    </data>
    <data name="ConvertRoomAsAttr" xml:space="preserve">
        <value>Convert room as attribute</value>
    </data>
    <data name="ExportRoomGeometry" xml:space="preserve">
        <value>Export room geometry</value>
    </data>
    <data name="FindMissingMaterials" xml:space="preserve">
        <value>Try and find 
missing material</value>
    </data>
    <data name="ConvertElementParams" xml:space="preserve">
        <value>Convert element parameters</value>
    </data>
    <data name="ConvertURLs" xml:space="preserve">
        <value>Convert URLs</value>
    </data>
    <data name="ConvertCAD" xml:space="preserve">
        <value>Convert linked 
CAD formats</value>
    </data>
    <data name="ConvertLights" xml:space="preserve">
        <value>Convert lights</value>
    </data>
    <data name="FacetingFactor" xml:space="preserve">
        <value>Faceting Factor</value>
    </data>
    <data name="ListConfigs" xml:space="preserve">
        <value>LIst of JSON configs</value>
    </data>
    <data name="ListConfigsToolTip" xml:space="preserve">
        <value>List of configuration files</value>
    </data>
    <data name="LoadConfigs" xml:space="preserve">
        <value>Load configs</value>
    </data>
    <data name="LoadConfigsToolTip" xml:space="preserve">
        <value>Load list with configuration files in (.txt) format</value>
    </data>
    <data name="Begin" xml:space="preserve">
        <value>Begin</value>
    </data>
    <data name="BeginToolTip" xml:space="preserve">
        <value>Begin export of multiple configurations</value>
    </data>
    <data name="ParamsTitle" xml:space="preserve">
        <value>Batch export parameters</value>
    </data>
    <data name="ParamsHeader" xml:space="preserve">
        <value>LIst of RVT files to process</value>
    </data>
    <data name="PathToResultingFile" xml:space="preserve">
        <value>Path to resulting file</value>
    </data>
    <data name="PathToResultingFileToolTip" xml:space="preserve">
        <value>Define path to the resulting file in (.csv) format</value>
    </data>
    <data name="ParamsToExport" xml:space="preserve">
        <value>Parameters to export</value>
    </data>
    <data name="ParamsToExportToolTip" xml:space="preserve">
        <value>Specify the names of the parameters to be exported using a semicolon (;).</value>
    </data>
    <data name="DefaultParams" xml:space="preserve">
        <value>Level;Assembly Code;Count</value>
    </data>
    <data name="TransmitTitle" xml:space="preserve">
        <value>Batch export of transmitted models</value>
    </data>
    <data name="PutEverythingInSingleFolder" xml:space="preserve">
        <value>Put everything 
in single folder</value>
    </data>
    <data name="FilterTxt" xml:space="preserve">
        <value>Text file (.txt)|*.txt</value>
    </data>
    <data name="FilterJson" xml:space="preserve">
        <value>JSON file (.json)|*.json</value>
    </data>
    <data name="FilterRvt" xml:space="preserve">
        <value>Revit Files (.rvt)|*.rvt</value>
    </data>
    <data name="FilterCsv" xml:space="preserve">
        <value>(CSV) split by semicolon (.csv)|*.csv</value>
    </data>
    <data name="RemoveAllLinks" xml:space="preserve">
        <value>Remove all Links</value>
    </data>
    <data name="OpenWorksets" xml:space="preserve">
        <value>Open Worksets</value>
    </data>
    <data name="PurgeUnused" xml:space="preserve">
        <value>Purge unused</value>
    </data>
    <data name="RemoveEmptyWorksets" xml:space="preserve">
        <value>Remove empty Worksets</value>
    </data>
    <data name="GoodEvening" xml:space="preserve">
        <value>Good evening</value>
    </data>
    <data name="Done" xml:space="preserve">
        <value>Done!</value>
    </data>
    <data name="Detached" xml:space="preserve">
        <value>_detached</value>
    </data>
    <data name="NoFolder" xml:space="preserve">
        <value>Specify the folder for export!</value>
    </data>
    <data name="WrongFolder" xml:space="preserve">
        <value>Specify valid folder for export!</value>
    </data>
    <data name="CreateFolderError" xml:space="preserve">
        <value>No such folder exists. 
Should I create one?</value>
    </data>
    <data name="ToHell" xml:space="preserve">
        <value>Well, the call is yours.</value>
    </data>
    <data name="NoFiles" xml:space="preserve">
        <value>Add at least one file for export!</value>
    </data>
    <data name="NoViewName" xml:space="preserve">
        <value>Enter View name</value>
    </data>
    <data name="NoPathMode" xml:space="preserve">
        <value>Select the Path mode!</value>
    </data>
    <data name="NoMaskPath" xml:space="preserve">
        <value>Specify the path replacement mask!</value>
    </data>
    <data name="WrongMask" xml:space="preserve">
        <value>Inconsistency between the input mask and file names!</value>
    </data>
    <data name="NoMaskFile" xml:space="preserve">
        <value>Enter a mask for renaming files!</value>
    </data>
    <data name="NoCsv" xml:space="preserve">
        <value>Specify the valid path to the output file!</value>
    </data>
    <data name="NoParameters" xml:space="preserve">
        <value>Specify at least one parameter for export!</value>
    </data>
    <data name="TaskCompleted" xml:space="preserve">
        <value>Task completed.</value>
    </data>
    <data name="MigrateNoConfig" xml:space="preserve">
        <value>Provide path to the configuration!</value>
    </data>
    <data name="MigrateDidntCopy" xml:space="preserve">
        <value>These files weren't copied:</value>
    </data>
    <data name="AddConfigs" xml:space="preserve">
        <value>Add configs!</value>
    </data>
    <data name="TotalTime" xml:space="preserve">
        <value>Total time:</value>
    </data>
    <data name="ThereWhere" xml:space="preserve">
        <value>There where</value>
    </data>
    <data name="Errors" xml:space="preserve">
        <value>errors.</value>
    </data>
    <data name="HelpLoad" xml:space="preserve">
        <value>	If you are using the plugin for the first time and do not have any previously saved lists, you need to do the following: use the “Load” button to add all the object models that need to be exported. If you accidentally added extra files, select them and click the “Delete” button.</value>
    </data>
    <data name="HelpFolder" xml:space="preserve">
        <value>	Next, specify the folder for saving. You can enter the path manually or select a folder using the “Browse” button.</value>
    </data>
    <data name="HelpNaming" xml:space="preserve">
        <value>	Set the prefix and postfix that you want to add to the file names. If you don't need to do this, just leave the fields blank.
	Select the export properties you need. The default settings are the ones that are used most often.</value>
    </data>
    <data name="HelpList" xml:space="preserve">
        <value>	Save the list by clicking the “Save list” button in (.txt) format.
	This list can then be used for re-exporting by clicking the “Load list” button.</value>
    </data>
    <data name="HelpConfig" xml:space="preserve">
        <value>	Save the configuration by clicking the “Save config” button in (.JSON) format.
	This configuration can then be used for re-exporting by clicking the “Load config” button.</value>
    </data>
    <data name="HelpStart" xml:space="preserve">
        <value>	Start the export by clicking the “Start” button.</value>
    </data>
    <data name="HelpDetachTitle" xml:space="preserve">
        <value>	The plugin is designed for batch export of detached models.</value>
    </data>
    <data name="HelpDetachMid" xml:space="preserve">
        <value>	Select the export mode:
1. All files will be placed in one folder.
2. Files will be placed in the appropriate folders, i.e., the path will be updated according to the mask.</value>
    </data>
    <data name="HelpIFCTitle" xml:space="preserve">
        <value>	The plugin is designed for batch export of files to IFC format.</value>
    </data>
    <data name="HelpLinkTitle" xml:space="preserve">
        <value>	The plugin is designed for batch adding models as Revit links.</value>
    </data>
    <data name="HelpMigrate" xml:space="preserve">
        <value>	The plugin is designed to migrate a project to a new location while preserving the structure of links, both within folders and within the models themselves.
	Open or paste a link to the Json config, which stores the structure of type Dictionary&lt;string, string&gt;,
where the first string is the current path to the file, and the second is the new path.
    Example:
    { “C:\oldfile.rvt”: “C:\newfile.rvt”,}</value>
    </data>
    <data name="HelpNWCTitle" xml:space="preserve">
        <value>	The plugin is designed for batch exporting files to NWC format.</value>
    </data>
    <data name="HelpNWCEnd" xml:space="preserve">
        <value>
	**********************************************

	If you have several saved configurations, you can use the second-level batch export.
	Use the “Load Configs” button to load a list (.txt) with paths to configurations in (.JSON) format. The list structure looks like this: 
	path\\config.json
	path\\config2.json
	path\\config3.json

	Use the “Begin” button to start the second-level batch export, which exports several objects with their corresponding settings.</value>
    </data>
    <data name="HelpTransmitTitle" xml:space="preserve">
        <value>	The plugin is designed for batch transfer of models and implements similar functionality to the “eTransmit” plugin.</value>
    </data>
    <data name="HelpParamsTitle" xml:space="preserve">
        <value>	The plugin is designed for batch export of parameters from the model to a .csv file.
	Specify the names of the parameters to be exported, separated by semicolon (;) in the corresponding field.</value>
    </data>
    <data name="CorePanelExport" xml:space="preserve">
        <value>Batch export</value>
    </data>
    <data name="CorePanelImport" xml:space="preserve">
        <value>Batch import</value>
    </data>
    <data name="CoreButtonNWCText" xml:space="preserve">
        <value>NWC 
Export</value>
    </data>
    <data name="CoreButtonIFCText" xml:space="preserve">
        <value>IFC 
Export</value>
    </data>
    <data name="CoreButtonDetachText" xml:space="preserve">
        <value>Detach 
models</value>
    </data>
    <data name="CoreButtonTransmitText" xml:space="preserve">
        <value>Transmit 
models</value>
    </data>
    <data name="CoreButtonMigrateText" xml:space="preserve">
        <value>Migrate 
models</value>
    </data>
    <data name="CoreButtonParamsText" xml:space="preserve">
        <value>Parameters 
Export</value>
    </data>
    <data name="CoreButtonLinkText" xml:space="preserve">
        <value>Link 
RVT models</value>
    </data>
    <data name="CoreButtonWorksetsText" xml:space="preserve">
        <value>Worksets 
Export</value>
    </data>
    <data name="CoreButtonNWCToolTip" xml:space="preserve">
        <value>Batch export models to NWC</value>
    </data>
    <data name="CoreButtonIFCToolTip" xml:space="preserve">
        <value>Batch export models to IFC</value>
    </data>
    <data name="CoreButtonDetachToolTip" xml:space="preserve">
        <value>Batch detach and export models</value>
    </data>
    <data name="CoreButtonTransmitToolTip" xml:space="preserve">
        <value>Batch transmit models</value>
    </data>
    <data name="CoreButtonMigrateToolTip" xml:space="preserve">
        <value>Batch migrate models and update nested links</value>
    </data>
    <data name="CoreButtonParamsToolTip" xml:space="preserve">
        <value>Batch export parameters from models into single CSV</value>
    </data>
    <data name="CoreButtonLinkToolTip" xml:space="preserve">
        <value>Link batch of RVT models to current project in one click</value>
    </data>
    <data name="CoreButtonWorksetsToolTip" xml:space="preserve">
        <value>Batch export workset name from several models</value>
    </data>
    <data name="LoadListTxtToolTip" xml:space="preserve">
        <value>Load previously saved file list in (.txt) format</value>
    </data>
    <data name="SaveListTxtToolTip" xml:space="preserve">
        <value>Save list in (.txt) format</value>
    </data>
    <data name="PutEverythingInSingleFolderToolTip" xml:space="preserve">
        <value>Put all models into single directory or preserve folder structure</value>
    </data>
    <data name="DwgImportDialog" xml:space="preserve">
        <value>Import detected no valid elements in the file's Model space</value>
    </data>
</root>